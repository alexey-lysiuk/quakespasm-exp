--- a/Quake/gl_draw.c
+++ b/Quake/gl_draw.c
@@ -153,6 +153,9 @@ int Scrap_AllocBlock (int w, int h, int *x, int *y)
 	int		best, best2;
 	int		texnum;
 
+	*x = 0;
+	*y = 0;
+
 	for (texnum=0 ; texnum<MAX_SCRAPS ; texnum++)
 	{
 		best = BLOCK_HEIGHT;
--- a/Quake/gl_rlight.c
+++ b/Quake/gl_rlight.c
@@ -171,7 +171,8 @@ void R_MarkLights (dlight_t *light, int num, mnode_t *node)
 	msurface_t	*surf;
 	vec3_t		impact;
 	float		dist, l, maxdist;
-	int			i, j, s, t;
+	unsigned int i;
+	int			j, s, t;
 
 start:
 	if (node->contents < 0)
@@ -308,7 +309,8 @@ loc0:
 		return true;	// hit something
 	else
 	{
-		int i, ds, dt;
+		unsigned int i;
+		int ds, dt;
 		msurface_t *surf;
 	// check for impact on this node
 		VectorCopy (mid, lightspot);
--- a/Quake/zone.c
+++ b/Quake/zone.c
@@ -335,11 +335,10 @@ Otherwise, allocations with the same name will be totaled up before printing.
 void Hunk_Print (qboolean all)
 {
 	hunk_t	*h, *next, *endlow, *starthigh, *endhigh;
-	int		count, sum;
+	int		sum;
 	int		totalblocks;
 	char	name[HUNKNAME_LEN];
 
-	count = 0;
 	sum = 0;
 	totalblocks = 0;
 
@@ -379,7 +378,6 @@ void Hunk_Print (qboolean all)
 			Sys_Error ("Hunk_Check: bad size");
 
 		next = (hunk_t *)((byte *)h+h->size);
-		count++;
 		totalblocks++;
 		sum += h->size;
 
@@ -398,7 +396,6 @@ void Hunk_Print (qboolean all)
 		{
 			if (!all)
 				Con_Printf ("          :%8i %8s (TOTAL)\n",sum, name);
-			count = 0;
 			sum = 0;
 		}
 
