name: CMake CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Linux ARM Clang
            os: ubuntu-24.04-arm
            extra_options: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

          - name: Linux ARM GCC
            os: ubuntu-24.04-arm

          - name: Linux Intel Clang
            os: ubuntu-24.04
            extra_options: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

          - name: Linux Intel GCC
            os: ubuntu-24.04

          - name: macOS Intel
            os: macos-15-intel

          - name: macOS ARM
            os: macos-15

          - name: MSVC 32-bit
            os: windows-2025
            extra_options: -A Win32

          - name: MSVC 64-bit
            os: windows-2025

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          if [[ "${{ runner.os }}" == 'Linux' ]]; then
            sudo apt update && sudo apt install libflac-dev libmpg123-dev libopusfile-dev libsdl2-dev libvorbis-dev libxmp-dev
          elif [[ "${{ runner.os }}" == 'macOS' ]]; then
            brew install flac libvorbis libxmp mpg123 opusfile sdl2
          fi

      - name: Configure
        run: |
          cmake -B build -DQUAKE_WARNINGS_AS_ERRORS=ON -DQUAKE_GENERATE_VERSION_HEADER=ON ${{ matrix.config.extra_options }} .

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: Build
        run: |
          export MAKEFLAGS=--keep-going
          cmake --build build --config Release --parallel ${{ steps.cpu-cores.outputs.count }}

      - name: List Build Directory
        if: always()
        run: |
          cat build/expversion.h
          git status
          ls -lR build
